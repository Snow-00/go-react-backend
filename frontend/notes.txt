Use var if you want function-scoped variables that can be hoisted.
Use let if you want block-scoped variables that can be reassigned.
Use const if you want block-scoped variables that are constant and cannot be reassigned.
https://www.linkedin.com/pulse/var-vs-let-const-easiest-explanation-ever-asit-rohan-dass#:~:text=Use%20var%20if%20you%20want,constant%20and%20cannot%20be%20reassigned.

span element is basically like div but its inline-level element
https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span

em element is used to print the text in italic

to props in <Link> has many functionality
https://v5.reactrouter.com/web/api/Link

this is how list.map((m) => (...)) works
https://legacy.reactjs.org/docs/lists-and-keys.html

key attribute is used in React to identify which items in the list are changed, updated, or deleted
https://www.geeksforgeeks.org/reactjs-keys/

useParams is to get the param of the url

in onChange, event.target.value means we're getting the data inside the input box

Outlet element in react is for rendering the children route of a parent route ("/"), that is also why the page doesnt rerender the entire screen when we change to other children path
https://kotakode.com/pertanyaan/21032
https://www.codecademy.com/learn/learn-react-router/modules/learn-react-router/cheatsheet

useOutletContext is for passing data / hooks from 1 route to other route in the same parent route
https://phantodev.hashnode.dev/using-useoutletcontext-hook-reactjs

Hooks allow function components to have access to state and other React features
https://www.w3schools.com/react/react_hooks.asp

onChange, to be accurate is to get the data in input for every little change that happens inside it and pass it to some func (e.g. to change the value of email n password)
then the submit input is to run the func thats in the onSubmit props / attribute

ARIA roles provide semantic meaning to content, allowing screen readers and other tools to present and support interaction with an object in a way that is consistent with user expectations of that type of object. By default, many semantic elements in HTML have a role; for example, <input type="radio"> has the "radio" role. Non-semantic elements in HTML do not have a role; <div> and <span> without added semantics return null.
https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles

Screen readers are necessary for blind people, important for partially-sighted users and helpful for people with reading disorders.
https://www.w3schools.com/accessibility/accessibility_screen_readers.php

useNavigate is like Link element, its to navigate to other page, but its in react

new Headers is to initiate new Headers for requests, this is a must

fetch is to send request to the link/api n try to get the response from it. To use the response, we use .then()

if u want to use the api in codespace u need to change fetch link into https://curly-computing-machine-7j9pxpgw57fxqp4-8080.app.github.dev/movies

preventDefault is called on the event when submitting the form to prevent a browser reload/refresh
https://www.robinwieruch.de/react-preventdefault/

credentials: 'include' => Always send user credentials (cookies, basic http auth, etc..), even for cross-origin calls
https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials

The JSON.stringify() static method converts a JavaScript value (object) to a JSON string
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify

the safest place to store jwt token is as a variable in js / react, but the refresh token is in the cookie to make it easy when refreshing the token

.finally() means this will be exec no matter what at the end

The setInterval() method executes a function repeatedly at a specified interval.
To avoid memory leaks, its important to use clearInterval in a cleanup func (see the reference)
https://www.geeksforgeeks.org/how-to-use-setinterval-method-inside-react-components/

useCallback is used to cache the func so we can use the func without rerender it again, like increment(?). additional info
useCallback is used to prevent rerender the components every time the parent func does, read this
https://www.w3schools.com/react/react_usecallback.asp
https://legacy.reactjs.org/docs/hooks-reference.html
https://refine.dev/blog/react-usecallback-guide/#what-is-react-usecallback-

to check if the user still on, its better to use token rather than useIdleTimer, becoz useIdleTimer only checks whether the user cursor / page moving or not and that can be manipulate using extension

when we refresh the page, react will rerender everything from the func / component to state n variables, except for the ones in useCallback

clearInterval menerima input id dari hasil setInterval

in useEffect we can give return () => {}; so that the return func will only be run after the component is unmounted

using empty catch block is not a really good idea, but if ur sure then its ok
https://stackoverflow.com/questions/1234343/why-are-empty-catch-blocks-a-bad-idea

to use proxy just simply add this in package.json
"proxy": "http://localhost:8080",
https://blog.logrocket.com/why-you-should-use-proxy-server-create-react-app/

if theres an error in proxy try this solution first
https://stackoverflow.com/questions/48291950/proxy-not-working-for-react-and-node

in react the default for running func is synchronous (not sequential), so if u want to make it asynchronous use Promise, async, await
https://www.youtube.com/watch?v=9j1dZwFEJ-c
https://www.youtube.com/watch?v=li7FzDHYZpc

to pass a value as property do it like this
title={"title"}

Text in a <pre> element is displayed in a fixed-width font, and the text preserves both spaces and line breaks.
https://www.w3schools.com/tags/tag_pre.asp

object.values() method is used to return an array whose elements are the enumerable property values found on the object
https://www.geeksforgeeks.org/javascript-object-values-method/

append is exclusive for headers, push is to append data to a general array

dalam React, Anda harus menghindari perubahan langsung pada state, dan sebaiknya membuat salinan baru untuk diubah.

this means we spred the movie array value then we change genres and genres_array w/ new values
{
    ...movie,
    genres: checks,
    genres_array: [],
}

using previous value from state
prevValue => ({
    ...prevValue,
    genres: checks,
    genres_array: [],
})

event.target.value
this returns string type data

alert() is to make pop up

The toISOString() method of Date instances returns a string representing this date in the date time string format
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString

passing prop to react router dom is by using state={{...}}

to get props from state in Link (react router dom), use the useLocation hook

in .env file frontend
REACT_APP_BACKEND=https://api.learn-code.ca

to build use 
npm run build

=============================================================================================================

JUST FOR LEARNING
// const toggleRefresh = useCallback(status => {
//   console.log("clicked")

//   if (status) {
//     let i = setInterval(() => {
//       console.log("this will run every sec")
//     }, 1000)
//     setTickInterval(i)

//     console.log("setting tick interval to", i)
//   } else {
//     console.log("turning off tickInterval", tickInterval)
    
//     setTickInterval(null)
//     clearInterval(tickInterval)
//   }
// }, [tickInterval])